{"version":3,"sources":["logo.svg","Progressbar.js","App.js","reportWebVitals.js","index.js"],"names":["Progressbar","props","bgcolor","completed","fillerStyles","height","width","backgroundColor","borderRadius","textAlign","transition","style","margin","padding","color","fontWeight","list","id","firstname","lastname","year","App","className","src","logo","alt","type","placeholder","name","required","onclick","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAAe,G,KAAA,IAA0B,kCCsC1BA,G,MApCK,SAACC,GAAW,IACpBC,EAAuBD,EAAvBC,QAASC,EAAcF,EAAdE,UAUXC,EAAe,CACnBC,OAAQ,OACRC,MAAM,GAAD,OAAKH,EAAL,KACLI,gBAAiBL,EACjBM,aAAc,UACdC,UAAW,QACXC,WAAY,wBASd,OACE,qBAAKC,MAxBiB,CACtBN,OAAQ,GACRC,MAAO,MACPC,gBAAiB,UACjBC,aAAc,GACdI,OAAQ,IAmBR,SACE,qBAAKD,MAAOP,EAAZ,SACE,sBAAMO,MATQ,CAClBE,QAAS,EACTC,MAAO,QACPC,WAAY,QAMR,mBAA8BZ,EAA9B,aC1BJa,EAAO,CACX,CACEC,GAAI,IACJC,UAAW,QACXC,SAAU,UACVC,KAAM,MAER,CACEH,GAAI,IACJC,UAAW,OACXC,SAAU,UACVC,KAAM,MAER,CACEH,GAAI,IACJC,UAAW,OACXC,SAAU,UACVC,KAAM,OAsCKC,MAlCf,WAKE,OACE,qBAAKC,UAAU,MAAf,SACE,uBAAMA,UAAU,aAAhB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,iCACA,gDACI,uBAAOC,KAAK,OAAOC,YAAY,iBAAiBC,KAAK,WAAWC,UAAQ,IACxE,gDACA,uBAAOH,KAAK,WAAWC,YAAY,iBAAiBC,KAAK,WAAWC,UAAQ,IAC5E,wBAAQC,QAAQ,eAAhB,sBAEA,6BACPd,EAAKe,KAAI,SAAAC,GAAI,OACZ,+BACE,8BAAMA,EAAKf,KACX,8BAAMe,EAAKd,YACX,8BAAMc,EAAKb,WACX,8BAAMa,EAAKZ,SAJJY,EAAKf,SASlB,cAAC,EAAD,CAAaf,QAAS,UAAWC,UAAU,aCzC9B8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9018d6b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nconst Progressbar = (props) => {\r\n    const { bgcolor, completed } = props;\r\n  \r\n    const containerStyles = {\r\n      height: 20,\r\n      width: '50%',\r\n      backgroundColor: \"#e0e0de\",\r\n      borderRadius: 50,\r\n      margin: 50\r\n    }\r\n  \r\n    const fillerStyles = {\r\n      height: '100%',\r\n      width: `${completed}%`,\r\n      backgroundColor: bgcolor,\r\n      borderRadius: 'inherit',\r\n      textAlign: 'right',\r\n      transition: 'width 1s ease-in-out',\r\n    }\r\n  \r\n    const labelStyles = {\r\n      padding: 5,\r\n      color: 'white',\r\n      fontWeight: 'bold'\r\n    }\r\n  \r\n    return (\r\n      <div style={containerStyles}>\r\n        <div style={fillerStyles}>\r\n          <span style={labelStyles}>{`${completed}%`}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\nexport default Progressbar;","import logo from './logo.svg';\nimport './App.css';\nimport Progressbar from \"./Progressbar\";\n\n\nconst list = [\n  {\n    id: '1',\n    firstname: 'Robin',\n    lastname: 'Wieruch',\n    year: 1988,\n  },\n  {\n    id: '2',\n    firstname: 'Dave',\n    lastname: 'Davidds',\n    year: 1990,\n  },\n  {\n    id: '3',\n    firstname: 'Dave',\n    lastname: 'Davidds',\n    year: 1990,\n  },\n];\n\nfunction App() {\n\n  \n\n  \n  return (\n    <div className=\"App\">\n      <body className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <form>\n        <label>Username : </label> \n            <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" required></input>\n            <label>Password : </label> \n            <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" required></input>\n            <button onclick=\"myFunction()\">Login</button>\n            </form>\n            <ul>\n    {list.map(item => (\n      <li key={item.id}>\n        <div>{item.id}</div>\n        <div>{item.firstname}</div>\n        <div>{item.lastname}</div>\n        <div>{item.year}</div>\n      </li>\n    ))}\n  </ul>\n\n  <Progressbar bgcolor={\"#6a1b9a\"} completed='60' />\n\n            </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}